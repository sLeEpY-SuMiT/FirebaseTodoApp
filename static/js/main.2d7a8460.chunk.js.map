{"version":3,"sources":["logo.svg","config.js","components/Todo.js","components/AddTodo.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getStorage","getAuth","GoogleAuthProvider","Todo","todo","toggleComplete","handleDelete","handleEdit","React","useState","title","newTitle","setNewTitle","className","style","textDecoration","completed","type","value","onChange","e","preventDefault","complete","target","onClick","id","AddTodo","user","JSON","parse","localStorage","getItem","setTitle","redirect","setRedirect","handleSubmit","a","addDoc","collection","userId","Fragment","to","padding","marginBottom","Image","float","src","photoURL","marginRight","Button","signOut","then","console","log","catch","error","SignOut","variant","textAlign","userName","onSubmit","placeholder","SignUp","setUser","signInWithGoogle","provider","signInWithPopup","result","credential","credentialFromResult","accessToken","displayName","email","uid","res","setItem","stringify","code","message","credentialFromError","verticalAlign","marginTop","TodoList","todos","setTodos","useEffect","todosRef","q","query","where","unsub","onSnapshot","querySnapshot","todosArray","forEach","doc","push","data","updateDoc","deleteDoc","map","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d7a8460.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { initializeApp } from \"firebase/app\";\r\nimport {getAuth,GoogleAuthProvider} from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport {getStorage} from 'firebase/storage'\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAZAKqtkiUNwDUvu8u1XJdQb78rBUwehmE\",\r\n  authDomain: \"to-do-4db1b.firebaseapp.com\",\r\n  projectId: \"to-do-4db1b\",\r\n  storageBucket: \"to-do-4db1b.appspot.com\",\r\n  messagingSenderId: \"1087623711498\",\r\n  appId: \"1:1087623711498:web:abdde669e6e77c022848f3\",\r\n  measurementId: \"G-S30JYJ8DFR\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\nvar auth = getAuth(app);\r\nvar provider = new GoogleAuthProvider(auth); \r\n\r\nexport { db,app ,storage,auth,provider};","import React from \"react\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nexport default function Todo({ todo, toggleComplete, handleDelete, handleEdit,}) {\n  const [newTitle, setNewTitle] = React.useState(todo?todo.title:\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    if (todo.complete === true) {\n      setNewTitle(todo.title);\n    } else {\n      todo.title = \"\";\n      setNewTitle(e.target.value);\n    }\n  };\n  return (\n    <div className=\"todo\">\n      <input\n        style={{ textDecoration: todo ? todo.completed && \"line-through\":\"\" }}\n        type=\"text\"\n        value={todo ?(todo.title === \"\" ? newTitle : todo.title):\"\"}\n        className=\"list\"\n        onChange={handleChange}\n      />\n      <div>\n        <button\n          className=\"button-complete\"\n          onClick={() => toggleComplete(todo)}\n        >\n          <CheckCircleIcon id=\"i\" />\n        </button>\n        <button\n          className=\"button-edit\"\n          onClick={() => handleEdit(todo, newTitle)}\n        >\n          <EditIcon id=\"i\" />\n        </button>\n        <button className=\"button-delete\" onClick={() => handleDelete(todo.id)}>\n          <DeleteIcon id=\"i\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db } from \"../config\";\nimport { Navigate } from 'react-router-dom'\nimport { TodoList } from \"../App\";\nimport { signOut, getAuth } from 'firebase/auth';\nimport { Button, Image } from 'react-bootstrap';\nimport Cookies from \"universal-cookie\";\n\n\nconst USER = \"user\"\nexport default function AddTodo() {\n  const user = JSON.parse(localStorage.getItem(USER))\n  const [title, setTitle] = React.useState(\"\");\n  const [redirect, setRedirect] = React.useState(false);\n  \n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (title !== \"\") {\n      await addDoc(collection(db, \"todos\"), {\n        title,\n        completed: false,\n        userId: user.id\n      });\n      setTitle(\"\");\n    }\n  };\n\n  \n\n  function SignOut() {\n    const auth = getAuth();\n    signOut(auth).then(() => {\n      setRedirect(true);\n      console.log(\"ho gya bhai\");// Sign-out successful.\n    }).catch((error) => {\n      console.log(\"bhai kya kr rha hai tuu\");\n    });\n  }\n  return (\n    <React.Fragment>\n      {redirect ? <Navigate to={\"/\"} /> : (\n        <>\n          <div style={{ padding: '30px', marginBottom: '80px' }}>\n            <Image style={{ float: 'right' }} src={user.photoURL} />\n          </div>\n          <div style={{ marginRight: '50px' }}>\n            <Button style={{ float: 'right' }} onClick={(e) => { e.preventDefault(); SignOut() }} variant='outline-primary'>\n              Log Out\n            </Button>\n          </div>\n\n          <div style={{ textAlign: 'center' }}>\n            <h3>Welcome, {user.userName} <span> write your first todo here</span></h3>\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input_container\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter todo...\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </div>\n            <div className=\"btn_container\">\n              <button>Add</button>\n            </div>\n          </form>\n          <TodoList />\n        </>\n      )}\n\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\r\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from \"firebase/auth\";\r\nimport { addDoc, collection } from 'firebase/firestore'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { db } from '../config'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst SignUp = () => {\r\n    const [user, setUser] = useState(null)\r\n    const signInWithGoogle = async () => {\r\n        try {\r\n            const provider = new GoogleAuthProvider();\r\n            const auth = getAuth();\r\n            const result = await signInWithPopup(auth, provider);\r\n\r\n            const credential = GoogleAuthProvider.credentialFromResult(result);\r\n            const token = credential.accessToken;\r\n\r\n            const user = result.user;\r\n            //setUser(user);\r\n            console.log(user);\r\n\r\n            const res = await addDoc(collection(db, \"users\"), { userName: user.displayName, email: user.email, photoURL: user.photoURL, id: user.uid });\r\n            console.log(res);\r\n            setUser(user);\r\n            localStorage.setItem(\"user\", JSON.stringify({ userName: user.displayName, email: user.email, photoURL: user.photoURL, id: user.uid }));\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            const email = error.email;\r\n            // The AuthCredential type that was used.\r\n            const credential = GoogleAuthProvider.credentialFromError(error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                user ? <Navigate to={\"/AddTodo\"} /> : (\r\n                    <div style={{ textAlign: 'center', verticalAlign: 'sub', marginTop: '200px' }} >\r\n                        <Button variant='success' type=\"button\"  onClick={signInWithGoogle} > Sign Up\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUp","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  collection,\n  query,\n  onSnapshot,\n  doc,\n  updateDoc,\n  deleteDoc,\n  where\n} from \"firebase/firestore\";\nimport { db } from \"./config\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from \"firebase/auth\";\nimport { Route, BrowserRouter,Routes } from 'react-router-dom';\nimport Title from \"./components/Title\";\nimport Todo from \"./components/Todo\";\nimport AddTodo from \"./components/AddTodo\";\nimport SignUp from \"./components/SignUp\";\n\nconst USER = \"user\"\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n       \n      <BrowserRouter>\n      <Routes>\n        <Route path='/' exact element={<SignUp />}/>\n        <Route path='/AddTodo' exact element={<AddTodo />}/>\n        <Route path='/Todo' exact element={<Todo />}/>\n      </Routes>      \n      </BrowserRouter>\n      </React.Fragment>\n  );\n}\n\n\n\nexport const TodoList = () => {\n\n  const [todos, setTodos] = React.useState([]);\n  const user = JSON.parse(localStorage.getItem(USER))\n  console.log(user);\n\n\n  React.useEffect(() => {\n    let todosRef = collection(db, \"todos\");\n    const q = query(todosRef,where('userId',\"==\",user.id));\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      let todosArray = [];\n      querySnapshot.forEach((doc) => {\n        todosArray.push({ ...doc.data(), id: doc.id });\n      });\n      setTodos(todosArray);\n    });\n    return () => unsub();\n  }, []);\n\n  const handleEdit = async (todo, title) => {\n    await updateDoc(doc(db, \"todos\", todo.id), { title: title });\n  };\n  const toggleComplete = async (todo) => {\n    await updateDoc(doc(db, \"todos\", todo.id), { completed: !todo.completed });\n  };\n  const handleDelete = async (id) => {\n    await deleteDoc(doc(db, \"todos\", id));\n  };\n\n  return (\n  \n      <div className=\"todo_container\">\n        {todos.map((todo) => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            toggleComplete={toggleComplete}\n            handleDelete={handleDelete}\n            handleEdit={handleEdit}\n          />\n        ))}\n      </div>\n    \n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}